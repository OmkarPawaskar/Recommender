name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  
jobs:
  build:
    runs-on: ubuntu-latest

  steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: env.DOCKERHUB_USERNAME != ''
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
    - name: Log in to Amazon ECR
      if: env.DOCKERHUB_USERNAME == ''
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/recommender:latest
        if [ "${{env.DOCKERHUB_USERNAME }}" == ""]; then
          IMAGE_NAME=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/recommender:latest
        fi
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh =o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          docker pull $IMAGE_NAME
          docker-compose -f docker-compose.yaml up -d 
          EOF
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/recommender:latest
          AWS_REGION: ${{ secrets.AWS_REGION }}}
